#! /usr/bin/env bash
BASEDIR=$(dirname $0); cd $BASEDIR

. ./.libs/funcs
. ./env-vars

_require_var WORKSPACE_HOME

_usage() {
    echo "Update installed packages, scripts and synchronized files."
    echo ;
    echo "Usage: $0 [<option>]*"
    echo "Option:"
    echo "    -h: Displays this help message"
    exit 0
}

while getopts "h" opt; do
    case "$opt" in
        h)
            _usage
            ;;
    esac
done



echo "Updating packages:"
echo -e "$( hostnamectl | grep 'Operating System:' )"

if [ -n "$( type -t apt )" ]; then

    sudo -l 1>/dev/null
    if [ $? -ne 0 ] || ! [ "$( sudo whoami )" = "root" ]; then
        echo "Execute:"
        echo "> su \$USER"
        echo "[Process stopped]: $0"
        exit 0
    fi

    echo ;
    echo "Updating 'apt' packages"

    sudo apt update
    sudo apt upgrade -y
fi

if [ -n "$( type -t dnf )" ]; then
    echo ;
    echo "Updating 'dnf' packages"

    sudo dnf check-update
    sudo dnf upgrade -y
fi

if [ -n "$( type -t flatpak )" ]; then
    echo ;
    echo "Updating 'flatpak' packages"

    sudo flatpak update -y
fi

if [ -n "$( type -t pyenv )" ]; then
    echo ;
    echo "Updating 'pyenv' package"

    sudo pyenv update
fi

if [ -n "$( type -t poetry )" ]; then
    echo ;
    echo "Updating 'poetry' package"

    sudo poetry self update
fi


if [ -n "$( type -t rclone )" ]; then
    echo ;
    echo "Updating 'rclone' package"

    sudo rclone selfupdate
fi

if [ -d "$WORKSPACE_HOME/scripts" ]; then
    cd $WORKSPACE_HOME/scripts

    if ! [ -h "$WORKSPACE_HOME/scripts" ] && [ -n "$( type -t git )" ]; then
        echo ;
        echo "Updating scripts"

        git checkout main
        git pull origin main
    fi

    echo ;
    echo "Synchronizing backed up files"
    ./sync-cloud -f
fi

_back

echo ;
echo "[Completed]: $0"
