#! /usr/bin/env bash
BASEDIR=$(dirname $0); cd $BASEDIR

. ./.libs/funcs
. ./env-vars

_require_var EXECUTABLE_COMMANDS

_usage() {
    echo "Launches an executable file."
    echo ;
    echo "Usage: $0 [<option>]*"
    echo "Option:"
    echo "    -h: Displays this help message"
    exit 0
}

while getopts "h" opt; do
    case "$opt" in
        h)
            _usage
            ;;
    esac
done

_app_cmds=()

for _cmd in "${EXECUTABLE_COMMANDS[@]}"; do
    _app_cmds+=( "$_cmd" )
done

echo "Select an executable:"
for _idx in "${!_app_cmds[@]}"; do
    _app="${_app_cmds[$_idx]}"
    _app_name=$( cut -d : -f 1 <<< "$_app" ) 
    _app_cmd=$( cut -d : -f 2 <<< "$_app" )

    if [ -n "$( type -t $_app_cmd )" ]; then
        echo "$((_idx+1))) $_app_name [$_app_cmd]"
    else
        echo "$((_idx+1))) (not found) $_app_name"
    fi
done
read -p "app-index> " _app_index

if [ -z "$_app_index" ]; then
    echo "Invalid app index"
    echo "[Process stopped]: $0"
    exit 0
fi

_app="${_app_cmds[$((_app_index-1))]}"
_app_cmd=$( cut -d : -f 2 <<< "$_app" )

if [ -z "$_app_cmd" ]; then
    echo "Invalid app index"
    echo "[Process stopped]: $0"
    exit 0
fi

if [ -n "$( type -t $_app_cmd )" ]; then
    $_app_cmd
else
    _app_name=$( cut -d : -f 1 <<< "$_app" )

    echo "'$_app_name' executable not found"
    echo "[Process stopped]: $0"
    exit 0
fi

_back

echo "[Completed]: $0"