#! /usr/bin/env bash
BASEDIR=$(dirname $0); cd $BASEDIR

. ./libs
. ./env-vars

_require_var CLOUD_HOME
_require_var CLOUD_REMOTE_SOURCES

_usage() {
    echo "Synchronize local files from cloud providers."
    echo ;
    echo "Usage: $0 [<option>]*"
    echo "Option:"
    echo "    -s: Apply Rclone sync"
    echo "    -t: Test run"
    echo "    -h: Displays this help message"
    exit 0
}

_cloud_home=$( _trim_trailing_separator "$CLOUD_HOME" )
_sync_flag=0
_push_flag=0
_options="-P"

while getopts "sth" opt; do
    case "$opt" in
        s)
            _sync_flag=1
            ;;
        t)
            _options="--dry-run"
            ;;
        h)
            _usage
            ;;
    esac
done

_sync_ops=( "Pull" "Push" )

echo "Select an operation:"
for _idx in "${!_sync_ops[@]}"; do
    _op="${_sync_ops[$_idx]}"

    echo "$((_idx+1))) $_op"
done
read -p "operation-index> " _op_index

if [ -z "$_op_index" ]; then
    echo "Invalid operation index"
    echo "[Process stopped]"
    exit 0
fi

_sync_op="${_sync_ops[$((_op_index-1))]}"

if [ "$_sync_op" = "Push" ]; then
    _push_flag=1
fi

for _src in "${CLOUD_REMOTE_SOURCES[@]}"; do
    _config=$( cut -d : -f 1 <<< "$_src" ) 
    _path=$( cut -d : -f 2 <<< "$_src" )
    _path=$( _trim_separator "$_path" )

    if [ $_push_flag -eq 1 ]; then
        echo "Pushing changes to '$_config:$_path'"
        rclone copy "$_options" "$_cloud_home/$_config/$_path" $_config:$_path

        if [ $_sync_flag -eq 1 ]; then
            rclone sync "$_options" "$_cloud_home/$_config/$_path" $_config:$_path
        fi
    else
        echo "Pulling changes from '$_config:$_path'"
        rclone copy "$_options" $_config:$_path "$_cloud_home/$_config/$_path"

        if [ $_sync_flag -eq 1 ]; then
            rclone sync "$_options" $_config:$_path "$_cloud_home/$_config/$_path"
        fi
    fi
done

echo "[Completed]"
